//  implementation of interface auth version 2010-12-27 11:00
//  auto-generated by apimono

using IMVU.IDL;
using System;
using System.Collections.Generic;
using entity;

namespace api
{

public class auth {

    public Dictionary<string, object> signin(IContext ctx, idstring userid, password password)
    {
        dict Return = new dict();
        // your code goes here; add return values to 'Return'
        if (userid.str != "jwatte" || password.str != "123456")
        {
            throw new InvalidOperationException("Bad user name or password.");
        }
        UserSession sess = UserSession.Create(ctx, userid.str);
        Return.Add("token", new idstring(sess.sid));
        return Return;
    } // signin


    public Dictionary<string, object> signout(IContext ctx)
    {
        dict Return = new dict();
		if (ctx.Session != null)
		{
			ctx.Session.Invalidate(ctx);
		}
        // your code goes here; add return values to 'Return'
        return Return;
    } // signout


    public Dictionary<string, object> verify(IContext ctx)
    {
        dict Return = new dict();
        // your code goes here; add return values to 'Return'
        Return.Add("status", true);
        return Return;
    } // verify

}; // class

} // namespace

//  end of auth
